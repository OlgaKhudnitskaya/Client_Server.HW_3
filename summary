1) Прочиать про клиент-серверную архитектуру
 Архитектура «клиент-сервер» определяет общие принципы организации взаимодействия в сети, где имеются серверы, узлы-поставщики некоторых специфичных функций (сервисов) и
клиенты (потребители этих функций).
 Клиент – это не живой человек. В нашем случае – это браузер (Chrome, Opera, Safari), если мы говорим про web, и программа на компьютере, если говорим про desktop.
 Сервер – это некое хранилище нужной (или не очень) информации и внутреннее устройство приложения. Сюда за информацией обращается клиент.
 А еще есть база данных – что-то вроде упорядоченных полок в библиотеке, куда обращается сервер, получивший запрос от клиента. 
Пользователь отправляет определенный запрос на сервер, где тот системно обрабатывается и конечный результат отсылается клиенту.

2) Что такое HTTP и HTTPS 
Протокол - набор правил передачи информации. Т.е. с помощью протокола мы регламентируем, как наша информация будет передеваться в сети интернет
 HTTP (HyperText Transfer Protocol — протокол передачи гипертекста) — это прикладной протокол передачи данных в сети. 
На текущий момент используется для получения информации с веб-сайтов. Протокол HTTP основан на использовании технологии «клиент-сервер»: клиент, отправляющий запрос, 
является инициатором соединения; сервер, получающий запрос, выполняет его и отправляет клиенту результат.
 HTTPS (HyperText Transfer Protocol Secure) — расширение протокола HTTP для поддержки шифрования в целях повышения безопасности. 
Данные в протоколе HTTPS передаются поверх криптографических протоколов TLS или устаревшего в 2015 году SSL
В отличие от HTTP с TCP-портом 80, для HTTPS по умолчанию используется TCP-порт 443.

3) HTTP методы
 HTTP определяет множество методов запроса, которые указывают, какое желаемое действие выполнится для данного ресурса. 
 1. Метод GET запрашивает содержимое приложения. Запросы с использованием этого метода могут только извлекать данные.
4) HTTP статус коды сервера
5) Что такое ядро браузера 
6) Какие браузеры какиие ядра используют

7) Что такое API
Application Programming Interface (программный интерфейс приложения) - способ взаимодействия одной системы с другой -
это составляющая часть сервера, которая получает запросы и отправляет ответы.
Проще говоря, это набор компонентов, с помощью которых компьютерная программа (бот или же сайт) может взаимодействовать с другой программой (API).
1. Вызов операции - метод GET, POST
2. Входные данные - HTTP Request
3. Выходные данные - HTTP Response

8. Что такое ендпоинты
9) URL (URI, URL, URN)
10) Идемпотентные HTTP методы
11) Безопасные HTTP методы
12) Иденфикация, Аутентификация, Авторизация
13) Что такое IP
14) Что такое октаты в DNS
15) Что такое порт, сколько портов у Linux сервера

16) Уровни OSI
 Модель OSI (или Open System Interconnection) характеризует взаимодействие сетевого оборудования.
 В OSI модели выделяют 7 уровней: 
1. Физический (Physical) - занимается непосредственно передачей информации. Один из основных стандартов среди технологий физического уровня – Ethernet.
2. Канальный уровень (Data Link) - после получения сигнала с предыдущего физического уровня, на следующем (канальном) уровне происходит проверка и 
исправление погрешностей передачи. 
В нём условно выделяют следующие подуровни управления: LLC (логическим каналом)и MAC (доступом к среде)
Устройствами второго, канального, уровня считаются мосты и коммутаторы.
3. Сетевой уровень (Network) - на этой ступени вводятся понятия «маршрутизация» и «IP-адрес». Для трансформации MAC-адресов в IP применяется протокол ARP.
Устройствами здесь являются роутер или маршрутизатор
4. Транспортный уровень (Transport) - происходит доставка информации по каналам внешней сети. Блоки данных в данном случае делятся на отдельные фрагменты, 
размеры которых будут зависеть от используемого протокола. Для транспортного уровня это TCP и UDP.
5. Сеансовый уровень (Session) - отвечает за создание и окончание сеанса, обмен данными, за синхронизацию и другие процессы.
К протоколам сеансового уровня, например, относятся X.225, ISO 8327, SMPP (через него отправляются СМС сообщения), PAP.
6. Уровень представления (Presentation) - осуществляется преобразование форматов данных, например, сжатие и кодирование.
7. Уровень прикладной (Application) - располагаются сетевые службы, с которыми напрямую взаимодействуют пользователи. 
Данный уровень описывает взаимосвязь приложений на ПК и внешней сети. Сюда относятся протоколы для просмотра страниц в интернете (HTTPS, HTTP), 
для работы с почтовыми службами (SMTP, POP3), для передачи файлов (FTP, TFTP) и другие.

 17) Хедеры http запросов
Заголовки HTTP (англ. HTTP Headers) - это служебнаяинформация, здесь описывается, как основная часть должна передаваться
Это строки в HTTP-сообщении, содержащие разделённую двоеточием пару имя-значение. 
